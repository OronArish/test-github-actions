name: Build and deploy Python app

on:
  push:
    branches-ignore:
      - main
      - test-branch
  workflow_dispatch:

jobs:
  check-branch-up-to-date:
    runs-on: ubuntu-latest
    outputs:
      up_to_date: ${{ steps.check.outputs.up_to_date }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Check if branch is up-to-date with test-branch
        id: check
        run: |
          BASE_BRANCH=main
          CURRENT_BRANCH=$(echo "${GITHUB_REF#refs/heads/}")
          echo "Checking if $CURRENT_BRANCH is up-to-date with $BASE_BRANCH"
          git fetch origin $BASE_BRANCH
          if git merge-base --is-ancestor origin/$BASE_BRANCH HEAD; then
            echo "Branch $CURRENT_BRANCH is up-to-date with $BASE_BRANCH."
            echo "::set-output name=up_to_date::true"
          else
            echo "Branch $CURRENT_BRANCH is not up-to-date with $BASE_BRANCH."
            echo "::set-output name=up_to_date::false"
            exit 1
          fi

  build:
    runs-on: ubuntu-latest
    needs: check-branch-up-to-date
    if: needs.check-branch-up-to-date.outputs.up_to_date == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run the app
        run: python app.py

      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: needs.build.result == 'success'
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Deploy to "deployment" simulation
        run: echo "Deploying to deployment simulation"
